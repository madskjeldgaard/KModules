TITLE:: KModules
summary:: A collection of sound functions that are easily used in conjunction with
NodeProxy Roles in SC
categories:: Undocumented classes
related:: Classes/NodeProxy

DESCRIPTION::

A synth library including tedious factory functions for creating and managing synths


CLASSMETHODS::

INSTANCEMETHODS::

EXAMPLES::

code::
// Get a list of modules
k = Kfx.new;

Ndef('spectralnoise')[0] = { PinkNoise.ar(0.5) };

// Play it
Ndef('spectralnoise').play;

// Add a random spectral fx!
Ndef('spectralnoise')[1] = \filter -> k['fx']['spectral'].choose;

// Add a second random spectral fx!!
Ndef('spectralnoise')[2] = \filter -> k['fx']['spectral'].choose;

// Add a third random spectral fx!!!
Ndef('spectralnoise')[3] = \filter -> k['fx']['spectral'].choose;

// Play around with the dry/wet parameters for each effect
Ndef('spectralnoise').set(\wet1, 0.5, \wet2, 0.25, \wet3, 0.66);
::
